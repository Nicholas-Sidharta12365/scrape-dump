




Feature flags — Nextflow documentation




































Version dev (7c4538159) 

Stable
Edge
Latest





Get started

Overview
Installation
Your first script

Running pipelines

Command line
Configuration
Executors
Caching and resuming
Reports
Plugins

Developing pipelines

Scripts
Working with files
Processes
Channels
Workflows
Modules
Notifications
Secrets
Sharing pipelines
Migrating from DSL 1

Software dependencies

Git
Containers
Conda environments
Spack environments
Wave containers

Compute & storage

Amazon Web Services
Amazon S3
Azure
Google Cloud
Kubernetes
Fusion file system

Reference

CLI reference
Configuration options
Environment variables
Feature flags
Standard library
Process reference
Channel factories
Operators

Contributing

Overview
Workflow Diagram
Packages
Plugins

Tutorials

Using Nextflow with Flux
Understanding task resource metrics




            Nextflow is developed by:







Nextflow






Feature flags

 Edit on GitHub







Feature flags
Feature flags are used to introduce experimental or other opt-in features. They can be specified in the pipeline script or the configuration file.

nextflow.enable.configProcessNamesValidationWhen true, prints a warning for every withName: process selector that doesn’t match a process in the pipeline (default: true).

nextflow.enable.dslDefines the DSL version to use (1 or 2).


Changed in version 22.03.0-edge: DSL2 was made the default DSL version.



Changed in version 22.12.0-edge: DSL1 was removed.


nextflow.enable.moduleBinariesWhen true, enables the use of modules with binary scripts. See Module binaries for more information.

nextflow.enable.strict
New in version 22.05.0-edge.


When true, the pipeline is executed in “strict” mode, which introduces the following rules:

When reading a params file, Nextflow will fail if a dynamic param value references an undefined variable
When merging params from a config file with params from the command line, Nextflow will fail if a param is specified from both sources but with different types
When using the join operator, the failOnDuplicate option is true regardless of any user setting
When using the join operator, the failOnMismatch option is true (unless remainder is also true) regardless of any user setting
When using the publishDir process directive, the failOnError option is true regardless of any user setting
In a process definition, Nextflow will fail if an input or output tuple has only one element
In a process definition, Nextflow will fail if an output emit name is not a valid identifier (i.e. it should match the pattern /[A-Za-z_][A-Za-z0-9_]*/)
During a process execution, Nextflow will fail if a received input tuple does not have the same number of elements as was declared
During a process execution, Nextflow will fail if the storeDir directive is used with non-file outputs
Nextflow will fail if a pipeline param is referenced before it is defined
Nextflow will fail if multiple functions and/or processes with the same name are defined in a module script


nextflow.preview.output
New in version 24.04.0.


Experimental: may change in a future release.

When true, enables the use of the workflow output definition.

nextflow.preview.recursion
New in version 21.11.0-edge.


Experimental: may change in a future release.

When true, enables process and workflow recursion. See this GitHub discussion for more information.

nextflow.preview.topic
New in version 23.11.0-edge.


Experimental: may change in a future release.

When true, enables topic channels feature.






 Previous
Next 



© Copyright 2024, Seqera Labs, S.L.


  Built with Sphinx using a
    theme
    provided by Read the Docs.
   











